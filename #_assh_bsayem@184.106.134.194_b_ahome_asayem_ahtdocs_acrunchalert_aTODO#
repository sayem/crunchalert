

newsfeed ----- add to user ---->  newsfeed, integer (1, 2, 3 ---- 1/2 = daily/weekly news, 3 = no news)


- finish model/migrate for alerts and put in form ----> get params and check/validate with rule
- then work on newsfeed (boolean) ----> switch up DB to true or false, checkbox 




- checkbox for newsfeed and form submission for alerts ---> check form submission with crunchbase URLs w/ nokogiri and AJAX response; if not present then pop up
to suggest URL insert into DB
- work on form validation and get it down
- then workon cron.rb parsing ---- watch cron railscast



------> then work on cron.rb to parse and get relevant data for both newsfeed and each profile

------> then show list of recent crunchalerts on loggedin and show most popular on the side (home and loggedin)

------> HOMEPAGE: show recent crunchalerts from crunchbase (daily update) on the homepage (not loggedin) --- pull with cron; all jquery effects
-----> jquery button effects


---> newsfeed form and watch cron clip


<!--      <%= link_to "Register", :action => "register" %> | <%= link_to "Login", :action => "login" %> --> in application.html.erb

----> start working on form on page to get inputs for crunchbase profiles ------ TEST

----> then have a form on loggedin to test inputs for crunchbase profiles ----> link to a func and check
----> crunchalerts table: email address, list of CSV crunchbase profile names, boolean news feed 


HOMEPAGE
- recently added crunchalerts (last 24 hours) --- show most popular list ------> new links to crunchbase.com
- show images and sign up call if not logged in and search/add box to add an item ---> redirect to login page if not logged in
- logged in ---> show crunchalert list, jquery UI button to remove, search/add box to add things (jquery/ajax responses and make checks/validates for DB)
- search/add box ---> both on logged in and logged out
- option for adding 24hr news update ----> on logged in only



ACCOUNT SETTINGS
- need to block off users to /users index and any other routes that aren't authorized, also for users/other number too block it
- cron email maybe with actionmailer too

-----> careful parsing with nokogiri on cron.rb
-----> and cron-email.rb needs to have good email formatting --- plain and some colors, include all links relevant detail

- need to also think of routing unknown directories back to URL --- 401 redirects, etc on routes.rb

============================================================================================================================

- hone all rules for getting techcrunch/techmeme and milestone data ---- both content and the links; use css selectors
- crunchbase profiles that dont exit, just use nokogiri: (need to validate text inputs too before searching with nokogiri)
    <div class="msg_notice">
      Sorry, we could not find the record you were looking for.
    </div>

- milestones by date
- techmeme + techcrunch posts by date
- use actionmailer for welcome emails and stuff
- cron ruby file every 24 hours and one for every week too

- ADD ----> do regex validation, then pull URL with AJAX as so:

http://www.crunchbase.com/company/foursquare
http://www.crunchbase.com/company/stack-exchange ---- put hyphen in for spaces in words
http://www.crunchbase.com/company/bit-ly
http://www.crunchbase.com/company/art-sy
http://www.crunchbase.com/company/flavors-me
http://www.crunchbase.com/company/formspring

**** if it's a valid regex and we can't find it, then pop up box for inserting their crunchbase URL --- validate and check that if it's good

------------------------------------------------------------------------------------------

- daily/weekly emails
- milestones + techcrunch/techmeme posts

- search >>>> regex valid, check if it exists; if not ask user to submit the crunchbase URL ---- if error or not found, suggest link maybe; ---- format crunchbase URLs just like toolbar ---- but basically take responses and then check and confirm with the user

- have one composite email for each user ----> include everything and all the companies/people they're following
- heavy mailing list manager for bulk mlm

- sign up --- cookie/login user/email --- forgot password link ---- encrypt user details
- cron ----- check all category preferences and pull them ---- 

- heavy mail formatting ---- check mailing list sending











  def login
    if request.post?
      user = User.authenticate(params[:email], params[:password])
      if user
        session[:user_id] = user.id
        redirect_to @user
      else
        flash.now[:notice] = "Invalid user/password combination"
      end
    end
  end

  def logout
    session[:user_id] = nil
    flash[:notice] = "Logged out"
    redirect_to(:action => "login")
  end

  :controller => 'users', :action => 'show', :id => @current_user